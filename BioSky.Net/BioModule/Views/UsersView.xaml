<UserControl x:Class="BioModule.Views.UsersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BioModule.Views"
             xmlns:data="clr-namespace:BioData;assembly=BioData"
             xmlns:vm="clr-namespace:BioModule.ViewModels"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:cal="http://www.caliburnproject.org"    
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"             
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="400"
             >
    
    <UserControl.Resources>
        <ResourceDictionary>            
            <ResourceDictionary.MergedDictionaries>                
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Thickness x:Key="ControlMargin">0 5 0 5</Thickness>

            <vm:ConvertTextToImage x:Key="ConvertTextToImage" />
        </ResourceDictionary>
    </UserControl.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition Height="*"/>           
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="48"/>
            <ColumnDefinition Width="48"/>
            <ColumnDefinition Width="48"/>
            <ColumnDefinition Width="48"/>
        </Grid.ColumnDefinitions>

        <DataGrid x:Name="UsersList" ItemsSource="{Binding Users}" AutoGenerateColumns="False" Grid.Column="0" Grid.Row="1" BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,1,0" Grid.ColumnSpan="5" GridLinesVisibility="All" 
                  SelectedItem="{Binding SelectedItem, Mode=TwoWay}" >
            
            <DataGrid.Columns>
                <DataGridTextColumn Header="UID"           IsReadOnly="True" Binding="{Binding UID}"/>
                <DataGridTextColumn Header="First Name"    IsReadOnly="True" Binding="{Binding First_Name_}"/>
                <DataGridTextColumn Header="Last Name"     IsReadOnly="True" Binding="{Binding Last_Name_}"/>
                <DataGridTextColumn Header="Date of Birth" IsReadOnly="True" Binding="{Binding Date_Of_Birth}"/>
                <DataGridTextColumn Header="Gender"        IsReadOnly="True" Binding="{Binding Gender}"/>
                <DataGridTextColumn Header="Country"       IsReadOnly="True" Binding="{Binding Country}"/>
                <DataGridTextColumn Header="City"          IsReadOnly="True" Binding="{Binding City}"/>
                
                <DataGridTemplateColumn Header="Photo" IsReadOnly="True" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Width="64" Height="64" Source="{Binding Path=Photo, Converter={StaticResource ConvertTextToImage}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                
            </DataGrid.Columns>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseRightButtonDown">
                    <cal:ActionMessage MethodName="OnMouseRightButtonDown">
                        <cal:Parameter Value="$eventArgs"></cal:Parameter>
                    </cal:ActionMessage>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.ContextMenu>
                <ContextMenu x:Name="ContextMenu" IsEnabled="True">
                    <MenuItem Header="Open in New Tab"  IsEnabled="{Binding MenuOpenStatus, Mode=TwoWay}" />
                    <MenuItem Header="Add New"  />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>

        <Button  Style="{DynamicResource MetroCircleButtonStyle}" x:Name="button" Grid.Column="2" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="48" Height="48">
            <Image Source="{Binding AddIconSource}" Width="32" Height="32" />
        </Button>

        <Button Style="{DynamicResource MetroCircleButtonStyle}" x:Name="button_Copy" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="48" Height="48" Grid.Column="3">
            <Image Source="{Binding RemoveIconSource}" Width="32" Height="32"  />
        </Button>

        <Button Style="{DynamicResource MetroCircleButtonStyle}" x:Name="button_Copy1" Grid.Column="4" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="48" Height="48">
            <Image Source="{Binding DeleteIconSource}" Width="32" Height="32"  />
        </Button>

        <TextBox x:Name="SearchBox" Margin="0, 5, 0, 5"  Grid.Column="0"  Grid.Row="0"   
                         Controls:TextBoxHelper.Watermark="Search..."
                         Controls:TextBoxHelper.UseFloatingWatermark="True"
                         Controls:TextBoxHelper.ClearTextButton="True"             
                    cal:Message.Attach="[Event TextChanged] = [Action OnSearchTextChanged(SearchBox.Text)]"         
                  >
          
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}"
                               BasedOn="{StaticResource SearchMetroTextBox}">
                    <Style.Triggers>
                        <Trigger Property="Controls:TextBoxHelper.HasText"
                                         Value="True">
                            <Setter Property="Controls:TextBoxHelper.ButtonTemplate"
                                            Value="{DynamicResource ChromelessButtonTemplate}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>      
    </Grid>
</UserControl>
