<UserControl x:Class="BioModule.Views.VisitorsFilterMenuView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BioModule.Views"
             xmlns:vm="clr-namespace:BioModule.ViewModels"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:cal="http://www.caliburnproject.org" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"             
             xmlns:utils="clr-namespace:BioModule.Utils"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:resloader="clr-namespace:BioModule.ResourcesLoader"
             xmlns:gray="clr-namespace:GrayscaleEffect;assembly=GrayscaleEffect" 
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"  
             lex:LocalizeDictionary.DesignCulture="uk-UA"
             lex:ResxLocalizationProvider.DefaultAssembly="BioModule"
             lex:ResxLocalizationProvider.DefaultDictionary="lang"
             d:DataContext="{d:DesignInstance vm:VisitorsFilterMenuViewModel, IsDesignTimeCreatable=False}"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="500">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Menu.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <utils:ConvertPhotoPathToImage x:Key="ConvertPhotoPathToImage"     />
            <utils:ConvertLongToDateTime   x:Key="ConvertLongToDateTime"       />
            <BooleanToVisibilityConverter  x:Key="BooleanToVisibilityConverter"/>
            <resloader:ResourceLoader      x:Key="ResourceLoader"              />

            <Style x:Key="MyMarkStyle" TargetType="Image">
                <Setter Property="Visibility" Value="{Binding RelativeSource=
                                   {RelativeSource Mode=FindAncestor, AncestorType=MenuItem}
                                   , Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter} }">
                </Setter>
            </Style>

            <Style x:Key="MyStandardButton" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource BackgroundNormal}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushNormal}" />
                <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5" IsHitTestVisible="False"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource BackgroundSelected}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MyMenuItem" TargetType="MenuItem">
                <Setter Property="Template">    
               
                <Setter.Value>
                    <ControlTemplate>
                        <Grid Height="25" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Image Grid.Column="0"
                                   Source="{Binding Source={StaticResource ResourceLoader}, Path=OkIconSource}" 
                                   Width="16" Height="16" Style="{StaticResource MyMarkStyle}"/>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center"
                                       Text="{Binding RelativeSource=
                                       {RelativeSource Mode=FindAncestor, AncestorType=MenuItem}
                                       , Path=Header }"></TextBlock>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <Trigger  Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#FF333334" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>                   
                </Setter>
            </Style>

            <Style x:Key="GreyScaleImage" TargetType="Image">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource=
                                   {RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=IsEnabled }" Value="false">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <gray:GrayscaleEffect></gray:GrayscaleEffect>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Menu Grid.ColumnSpan="5" Grid.Row="1" FontSize="11">
            <MenuItem Header="{Binding CountryFilterText}" VerticalAlignment="Center">
                <MenuItem Header="Country">
                    <MenuItem.Template>
                        <ControlTemplate>
                            <ComboBox x:Name="CountryBox" Margin="1"                                      
                                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                      Controls:TextBoxHelper.Watermark="{lex:Loc Country}"
                                      Controls:TextBoxHelper.UseFloatingWatermark="True"
                                      Controls:TextBoxHelper.ClearTextButton="True"
                                      SelectedItem="{Binding SelectedCountry, UpdateSourceTrigger=PropertyChanged}"                          
                                      ItemsSource="{Binding CountryNames}"/>
                        </ControlTemplate>
                    </MenuItem.Template>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{Binding LocationFilterText}" VerticalAlignment="Center">
                <MenuItem Header="All" cal:Message.Attach="[Event Click] = [Action OnLocationsAllClick]" />
                <MenuItem Header="None" cal:Message.Attach="[Event Click] = [Action OnLocationsNoneClick]" />

                <!--************************************************Locations************************************* -->
                <MenuItem Header="Locations">
                    <MenuItem.Template>
                        <ControlTemplate>
                            <ComboBox x:Name="LocationsBox" Margin="1"                                      
                                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                      Controls:TextBoxHelper.Watermark="{lex:Loc Locations}"
                                      Controls:TextBoxHelper.UseFloatingWatermark="True"
                                      Controls:TextBoxHelper.ClearTextButton="True"
                                      SelectedItem="{Binding SelectedLocation, UpdateSourceTrigger=PropertyChanged}"                          
                                      ItemsSource="{Binding LocationItems}">
                                <ComboBox.Style>
                                    <Style TargetType="ComboBox" BasedOn="{StaticResource MetroComboBox}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ComboBox">
                                                    <Grid SnapsToDevicePixels="true" x:Name="MainGrid" Height="Auto" Width="Auto">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="0"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Popup AllowsTransparency="true" IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                               Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                                               Margin="1" x:Name="PART_Popup" Grid.ColumnSpan="2">
                                                            <Border x:Name="DropDownBorder" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding Path=ActualWidth, ElementName=MainGrid}">
                                                                <ScrollViewer CanContentScroll="true">
                                                                    <ListBox x:Name="lstBox" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                             KeyboardNavigation.DirectionalNavigation="Contained" 
                                                                             SelectionMode="Extended" ItemsSource="{TemplateBinding ItemsSource}"
                                                                             cal:Message.Attach="[Event SelectionChanged]= [Action OnSelectionLocationChanged($eventArgs)];"
                                                                             >
                                                                        <ListBox.ItemTemplate>
                                                                            <DataTemplate>                                                                                
                                                                                    <TextBlock Text="{Binding Caption, Mode=OneWay}" Margin="2,0,2,0" ></TextBlock>                                                                               
                                                                            </DataTemplate>
                                                                        </ListBox.ItemTemplate>
                                                                    </ListBox>
                                                                </ScrollViewer>
                                                            </Border>
                                                        </Popup>
                                                        <ToggleButton Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2"
                                                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                      Style="{DynamicResource MetroToggleButton}" Content="{Binding LocationButtonText}"/>
                                                        <ListBox IsHitTestVisible="false" ItemsSource="{Binding SelectedLocations}" Margin="4,0,0,0" Background="{x:Null}">
                                                            <ListBox.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <WrapPanel MaxWidth="250"/>
                                                                </ItemsPanelTemplate>
                                                            </ListBox.ItemsPanel>
                                                            <ListBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Border BorderThickness="1" BorderBrush="White" Margin="0,0,5,2" Background="{x:Null}">
                                                                        <TextBlock Text="{Binding Caption, Mode=OneWay}" Margin="2,0,2,0" ></TextBlock>
                                                                    </Border>                                                                    
                                                                </DataTemplate>
                                                            </ListBox.ItemTemplate>
                                                        </ListBox>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                        </ControlTemplate>
                    </MenuItem.Template>
                </MenuItem>
            </MenuItem>
            <!--************************************************/Locations************************************* -->
            <MenuItem Header="{Binding TimeFilterText}" VerticalAlignment="Center">
                <MenuItem Header="All time"      IsChecked="{Binding IsAllTimeChecked}"  IsCheckable="True" Style="{StaticResource MyMenuItem}"/>
                <MenuItem Header="Last hour"     IsChecked="{Binding IsLastHourChecked}" IsCheckable="True" Style="{StaticResource MyMenuItem}"/>
                <MenuItem Header="Last 24 hours" IsChecked="{Binding Is24HoursChecked}"  IsCheckable="True" Style="{StaticResource MyMenuItem}"/>
                <MenuItem Header="Last week"     IsChecked="{Binding IsWeekChecked}"     IsCheckable="True" Style="{StaticResource MyMenuItem}"/>
                <MenuItem Header="Last month"    IsChecked="{Binding IsMonthChecked}"    IsCheckable="True" Style="{StaticResource MyMenuItem}"/>
                <MenuItem Header="Last year"     IsChecked="{Binding IsYearChecked}"     IsCheckable="True" Style="{StaticResource MyMenuItem}"/>

                <Separator></Separator>
                <MenuItem Header="Period..."
                          cal:Message.Attach="[Event Click] = [Action ShowPeriodTimePicker()]"></MenuItem>
            </MenuItem>
            <MenuItem Header="Biometric" VerticalAlignment="Center">
                <MenuItem Header="Photo" IsCheckable="True" IsChecked="True" StaysOpenOnClick="True" />
            </MenuItem>

            <MenuItem>
                <MenuItem.Template>
                    <ControlTemplate>
                        <Button Name ="ResetButton" cal:Message.Attach="[Event Click] = [Action ResetSettings]"  HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" Style="{StaticResource MyStandardButton}" 
                                IsEnabled="{Binding IsResetButtonEnabled}">
                            <TextBlock Text="Reset settings">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=ResetButton, Path=IsEnabled}" Value="false" >
                                                <Setter Property="Foreground" Value="#FF4E4E50"></Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=ResetButton, Path=IsEnabled}" Value="true" >
                                                <Setter Property="Foreground" Value="#FFF1F1F1"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Button>
                    </ControlTemplate>
                </MenuItem.Template>
            </MenuItem>
        </Menu>

    </Grid>
</UserControl>
