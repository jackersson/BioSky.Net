<UserControl x:Class="BioModule.Views.Visitors.Detailed"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BioModule.Views"
             xmlns:vm="clr-namespace:BioModule.ViewModels"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:cal="http://www.caliburnproject.org" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"             
             xmlns:utils="clr-namespace:BioModule.Utils"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:resloader="clr-namespace:BioModule.ResourcesLoader"
             xmlns:gray="clr-namespace:GrayscaleEffect;assembly=GrayscaleEffect"
             xmlns:bioEngine="clr-namespace:BioEngine;assembly=BioEngine"
             xmlns:bioContracts="clr-namespace:BioContracts;assembly=BioContracts" 
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"  
             lex:LocalizeDictionary.DesignCulture="uk-UA"
             lex:ResxLocalizationProvider.DefaultAssembly="BioModule"
             lex:ResxLocalizationProvider.DefaultDictionary="lang"
             d:DataContext="{d:DesignInstance vm:VisitorsViewModel, IsDesignTimeCreatable=False}"
             mc:Ignorable="d" Background="#FF1E1E1E" BorderBrush="#FF3F3F46"
             d:DesignHeight="400" d:DesignWidth="400"              
             >  

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="GreyScaleImage" TargetType="Image">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource=
                                      {RelativeSource Mode=FindAncestor
                                      , AncestorType=Button}, Path=IsEnabled }" Value="false">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <gray:GrayscaleEffect></gray:GrayscaleEffect>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <utils:ConvertPhotoPathToImage x:Key="ConvertPhotoPathToImage" />            
            <utils:ConvertLongToDateTime x:Key="ConvertLongToDateTime"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
            <x:StaticExtension Member="resloader:ResourceLoader.Instance" x:Key="ResourceLoader"/>
            <x:StaticExtension Member="bioEngine:PermissionController.Instance" x:Key="Permissions"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid x:Name="GridLayout" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="45"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="48"/>
            </Grid.ColumnDefinitions>

            
            <!--******************************************** Search Menu ***************************************-->
            <Expander Background="#FF1E1E1E" BorderBrush="{x:Null}" Panel.ZIndex="100"
                      Grid.Row="1" Grid.ColumnSpan="5" Margin="2,0,0,0" >
                <Expander.Header>
                    <TextBlock Text="Search options"></TextBlock>
                </Expander.Header>
                <StackPanel>
                    <local:VisitorsFilterMenuView Grid.Row="1" Grid.ColumnSpan="5"  DataContext="{Binding VisitorsFilterMenu}"></local:VisitorsFilterMenuView>
                </StackPanel>
            </Expander>
            <!--******************************************** Search Menu ***************************************-->

            <ListBox Grid.Column="0" HorizontalAlignment="Stretch" 
                 Grid.ColumnSpan="5" BorderThickness="1" BorderBrush="#4C808080"
                 Margin="2,1,0,0" Grid.Row="2"  Grid.RowSpan="3" VerticalAlignment="Stretch"                   
                 SelectedItem="{Binding SelectedItem, Mode=TwoWay}" 
                 ItemsSource="{Binding VisitorsCollectionView}" 
                 SelectionMode="Extended" 
                 ScrollViewer.HorizontalScrollBarVisibility ="Disabled"
                 cal:Message.Attach="[Event MouseRightButtonDown] = [Action OnMouseRightButtonDown($mouseSelectedItem)];
                                     [Event SelectionChanged]     = [Action OnSelectionChanged($eventArgs)];
                                     [Event MouseDoubleClick]     = [Action OnMouseDoubleClick($mouseSelectedItem)]"
                 >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="6" Tag="{Binding DataContext, ElementName=GridLayout}">
                            <StackPanel.ContextMenu>
                                <ContextMenu IsEnabled="True" cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Open in New Tab"  
                              IsEnabled="{Binding MenuOpenStatus, Mode=TwoWay}"
                              cal:Message.Attach="[Event Click] = [Action ShowUserPage]"
                              />
                                    <MenuItem Header="Remove" 
                              IsEnabled="{Binding MenuOpenStatus, Mode=TwoWay}"                              
                              cal:Message.Attach="[Event Click] = [Action RemoveVisitor]"
                              />
                                    <MenuItem Header="Add Visitor as User" 
                              IsEnabled="{Binding MenuOpenStatus, Mode=TwoWay}"                              
                              cal:Message.Attach="[Event Click] = [Action OnAddVisitorAsUser]"
                              />
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <Image Source="{Binding Personid, Converter={x:Static utils:ConverterInitializer.PhotoIDConverter}}" 
                                       Stretch="Fill" Width="128" Height="128"/>
                            <StackPanel Width="128" Orientation="Horizontal" >
                                <TextBlock Text="{Binding Personid, Converter={x:Static utils:ConverterInitializer.PersonIdToFirstnameConverter}}"
                                   HorizontalAlignment="Left" Foreground="#FF5E82A8" FontWeight="Bold"></TextBlock>
                                <TextBlock Text="{Binding Personid, Converter={x:Static utils:ConverterInitializer.PersonIdToLastnameConverter}}" 
                                   HorizontalAlignment="Right" Foreground="#FF5E82A8" FontWeight="Bold" Margin="5,0,0,0"></TextBlock>
                            </StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="104" />
                                    <ColumnDefinition Width="24"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0">
                                    <TextBlock Width="104" Text="{Binding Locationid, Converter={x:Static utils:ConverterInitializer.LocationIdToLocationnameConverter}}" TextWrapping="Wrap" 
                                   HorizontalAlignment="Left" Foreground="Gray"></TextBlock>
                                    <TextBlock Text="{Binding Time, Converter={StaticResource ConvertLongToDateTime}}" HorizontalAlignment="Left" 
                                   Foreground="Gray" FontSize="11" FontWeight="SemiBold"></TextBlock>
                                </StackPanel>
                                <Image Grid.Column="1" Width="24" Height="24" VerticalAlignment="Bottom">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Status}" Value="Success">
                                                    <Setter Property="Source" Value="{Binding Source={StaticResource ResourceLoader}, Path=OkIconSource}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Status}" Value="Failed">
                                                    <Setter Property="Source" Value="{Binding Source={StaticResource ResourceLoader}, Path=ErrorIconSource}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Grid>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>

            <local:PageControllerView
                Grid.Column="2" Grid.ColumnSpan="2" Margin="1,1,1,1"
                DataContext="{Binding PageController}">
            </local:PageControllerView>



            <Button Name="DeleteButton" Style="{DynamicResource MetroCircleButtonStyle}" Grid.Column="4" Grid.Row="0"
                    HorizontalAlignment="Left" VerticalAlignment="Top" Width="48" Height="48"                 
                    ToolTip="{lex:Loc Delete}" Tag="{x:Static bioContracts:Activity.VisitorRemove}"
                    cal:Message.Attach="[Event Click] = [Action Select]"
                >
                <Button.IsEnabled>
                    <MultiBinding Converter="{x:Static utils:ConverterInitializer.MultiPermissionToVisibilityConverter}">
                        <Binding Source="{StaticResource Permissions}" Path="CurrentPermissionRights"/>
                        <Binding Path="IsDeleteButtonEnabled"/>
                        <Binding ElementName="DeleteButton" Path="Tag"/>                        
                    </MultiBinding>
                </Button.IsEnabled>
                <!-- IsEnabled="{Binding IsDeleteButtonEnabled}" cal:Message.Attach="[Event Click] = [Action OnDeleteVisitors]"  -->
                <Image Source="{Binding Source={StaticResource ResourceLoader}, Path=DeleteIconSource}" 
                       Width="32" Height="32" Style="{StaticResource GreyScaleImage}"  />
            </Button>

            <TextBox  Margin="2, 5, 0, 5" Grid.Column="0"  Grid.Row="0"   
                      Grid.ColumnSpan="2" x:Name="SearchBox"
                      Controls:TextBoxHelper.Watermark="{lex:Loc Search}"
                      Controls:TextBoxHelper.UseFloatingWatermark="True"
                      Controls:TextBoxHelper.ClearTextButton="True"
                      Controls:TextBoxHelper.ButtonCommand="{Binding TextBoxButtonCmd, Mode=OneWay}"                      
                      cal:Message.Attach="[Event TextChanged] = [Action OnSearchTextChanged(SearchBox.Text)]"
                      >
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}"
                               BasedOn="{StaticResource SearchMetroTextBox}">
                        <Style.Triggers>
                            <Trigger Property="Controls:TextBoxHelper.HasText"
                                         Value="True">
                                <Setter Property="Controls:TextBoxHelper.ButtonTemplate"
                                            Value="{DynamicResource ChromelessButtonTemplate}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </Grid>
        <Grid Margin="0,5,0,0"  cal:Message.Attach="[Event Loaded] = [Action OnDataContextChanged()]">
            <ContentControl                                      
                        cal:View.Model="{Binding PhotoImage}" >
            </ContentControl>
        </Grid>
    </Grid>
</UserControl>
