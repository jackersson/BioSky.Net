<UserControl x:Class="BioModule.Views.Visitors.Shorted"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BioModule.Views"
             xmlns:vm="clr-namespace:BioModule.ViewModels"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:cal="http://www.caliburnproject.org"    
             xmlns:utils="clr-namespace:BioModule.Utils"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="400"
             d:DataContext="{d:DesignInstance vm:VisitorsViewModel, IsDesignTimeCreatable=False}"
             >


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <utils:ConvertPhotoPathToImage x:Key="ConvertPhotoPathToImage" />
            <utils:ConvertStatusToImage x:Key="ConvertTextToImage" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="48"/>
            <ColumnDefinition Width="48"/>
            <ColumnDefinition Width="48"/>
            <ColumnDefinition Width="48"/>
        </Grid.ColumnDefinitions>

        <DataGrid 
            BorderThickness="1" 
                  Grid.Column="0" HorizontalAlignment="Stretch" 
            Grid.ColumnSpan="5" 
                  Margin="2,1,0,0" Grid.Row="0"  Grid.RowSpan="3" VerticalAlignment="Stretch"            
                  ItemsSource="{Binding FilteredVisitors}"                
                  GridLinesVisibility="All"
                  AutoGenerateColumns="False"
                  CanUserSortColumns="True" CanUserAddRows="False"
                  materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                  materialDesign:DataGridAssist.ColumnHeaderPadding="8"              
                  ColumnHeaderStyle="{StaticResource MaterialDesignDataGridColumnHeader}"
                  cal:Message.Attach="[Event MouseRightButtonDown] = [Action OnMouseRightButtonDown($mouseSelectedItem)]">

            <DataGrid.Columns>
                <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected, Mode=OneWay}"
                                        RenderOptions.ClearTypeHint="Enabled"
                                        TextOptions.TextFormattingMode="Display"
                                        >
                    <DataGridCheckBoxColumn.Header>
                        <!--padding to allow hit test to pass thru for sorting -->
                        <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                            <CheckBox HorizontalAlignment="Center"                                               
                                              DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                                              IsChecked="{Binding IsAllItems3Selected}" />
                        </Border>
                    </DataGridCheckBoxColumn.Header>
                </DataGridCheckBoxColumn>

                <DataGridTemplateColumn Header="Photo" IsReadOnly="True" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Width="32" Height="32" Source="{Binding User.Photo, Converter={StaticResource ConvertPhotoPathToImage}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Info"         IsReadOnly="True" Binding="{Binding User.First_Name_}"/>
                <DataGridTextColumn Header="Location"     IsReadOnly="True" Binding="{Binding Location.Location_Name}"/>
                <DataGridTextColumn Header="Time"         IsReadOnly="True" Binding="{Binding Detection_Time}"/>

                <DataGridTemplateColumn Header="Status" IsReadOnly="True" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Width="32" Height="32" Source="{Binding Path=Status, Converter={StaticResource ConvertTextToImage}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

            <DataGrid.ContextMenu >
                <ContextMenu x:Name="ContextMenu" IsEnabled="True" >
                    <MenuItem Header="Open in New Tab"  
                              IsEnabled="{Binding CanOpenInNewTab, Mode=TwoWay}"
                              cal:Message.Attach="[Event Click] = [Action ShowUserPage]"
                              />
                    <MenuItem Header="Remove" 
                              IsEnabled="{Binding CanOpenInNewTab, Mode=TwoWay}"                              
                              cal:Message.Attach="[Event Click] = [Action RemoveVisitor]"
                              />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
    </Grid>
</UserControl>
