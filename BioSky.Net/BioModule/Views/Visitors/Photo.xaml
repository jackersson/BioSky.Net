<UserControl x:Class="BioModule.Views.Visitors.Photo"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BioModule.Views"
             xmlns:vm="clr-namespace:BioModule.ViewModels"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:cal="http://www.caliburnproject.org"   
             xmlns:utils="clr-namespace:BioModule.Utils"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:resloader="clr-namespace:BioModule.ResourcesLoader"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"  
             xmlns:lex="http://wpflocalizeextension.codeplex.com"  
             lex:LocalizeDictionary.DesignCulture="uk-UA"
             lex:ResxLocalizationProvider.DefaultAssembly="BioModule"
             lex:ResxLocalizationProvider.DefaultDictionary="lang"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance vm:VisitorsViewModel, IsDesignTimeCreatable=False}"            
             d:DesignHeight="400" d:DesignWidth="400"
             
             >
  
    


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <utils:ConvertPhotoPathToImage x:Key="ConvertPhotoPathToImage" />           
            <utils:ConvertLongToDateTime x:Key="ConvertLongToDateTime"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
            <x:StaticExtension Member="resloader:ResourceLoader.Instance" x:Key="ResourceLoader"/>
            <CollectionViewSource Source="{Binding Visitors}" x:Key="SortedVisitors">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Time" Direction="Descending"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="GridLayout">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
        </Grid.ColumnDefinitions>
        <!--******************************************** Search Menu ***************************************-->
        <Expander Background="#FF1E1E1E" BorderBrush="{x:Null}" Panel.ZIndex="100"
                      Grid.Row="0" Margin="2,0,0,0" >
            <Expander.Header>
                <TextBlock Text="Search options"></TextBlock>
            </Expander.Header>
            <StackPanel>
                <local:VisitorsFilterMenuView Grid.Row="1" Grid.ColumnSpan="5"  DataContext="{Binding VisitorsFilterMenu}"></local:VisitorsFilterMenuView>
            </StackPanel>
        </Expander>
        <!--******************************************** Search Menu ***************************************-->

        <ListBox 
            DataContext="{Binding VisitorsView}"
            BorderThickness="1" 
                  Grid.Row="1" HorizontalAlignment="Stretch" 
            Grid.ColumnSpan="5"
                  Margin="2,1,0,0" VerticalAlignment="Stretch"            
                  ItemsSource="{Binding Source={StaticResource SortedVisitors}}" 
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"           
                  SelectedItem="{Binding SelectedItem, Mode=TwoWay}"              
                  cal:Message.Attach="[Event MouseRightButtonDown] = [Action OnMouseRightButtonDown($mouseSelectedItem)];
                                      [Event SelectionChanged]     = [Action OnSelectionChanged($eventArgs)];
                                      [Event MouseDoubleClick]     = [Action OnMouseDoubleClick($mouseSelectedItem)]" BorderBrush="#FF3E3E42">

            <ListBox.ItemTemplate>
                <DataTemplate>                        
                    <StackPanel Margin="-20,0,0,0" Tag="{Binding DataContext, ElementName=GridLayout}">
                        <StackPanel.ContextMenu>
                            <ContextMenu IsEnabled="True" cal:Action.TargetWithoutContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                <MenuItem Header="{lex:Loc OpenInNewTab}"  
                              IsEnabled="{Binding MenuOpenStatus, Mode=TwoWay}"
                              cal:Message.Attach="[Event Click] = [Action ShowUserPage]"
                              />
                                <MenuItem Header="{lex:Loc Remove}" 
                              IsEnabled="{Binding MenuOpenStatus, Mode=TwoWay}"                              
                              cal:Message.Attach="[Event Click] = [Action RemoveVisitor]"
                              />
                                <MenuItem Header="Add Visitor as User" 
                              IsEnabled="{Binding MenuOpenStatus, Mode=TwoWay}"                              
                              cal:Message.Attach="[Event Click] = [Action OnAddVisitorAsUser]"
                              />
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="Success">
                                        <Setter Property="Background" Value="#7FEAFFEA"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="Failed">
                                        <Setter Property="Background" Value="#33FFECEC"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <Grid Margin="5,5,5,5" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Image Grid.Column="0" Source="{Binding Personid, Converter={x:Static utils:ConverterInitializer.PhotoIDConverter}}" 
                                       Stretch="Fill" Width="50" Height="50"/>

                            <StackPanel Margin="-10,-4,0,0" Grid.Column="1">
                                <TextBlock Text="{Binding Personid, Converter={x:Static utils:ConverterInitializer.PersonIdToLastnameConverter}}" 
                                               HorizontalAlignment="Left" Foreground="#FF5E82A8" FontWeight="Bold" ></TextBlock>
                                <TextBlock Text="{Binding Personid, Converter={x:Static utils:ConverterInitializer.PersonIdToFirstnameConverter}}" 
                                               HorizontalAlignment="Left" Foreground="#FF5E82A8" FontWeight="Bold" ></TextBlock>
                                <TextBlock Text="{Binding Time, Converter={StaticResource ConvertLongToDateTime}}" 
                                               HorizontalAlignment="Left" Foreground="Gray" FontSize="11" FontWeight="SemiBold" ></TextBlock>

                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.ContextMenu >
                <ContextMenu x:Name="VisitorContextMenu" IsEnabled="True" >
                    <MenuItem Header="{lex:Loc OpenInNewTab}"  
                              IsEnabled="{Binding MenuOpenStatus, Mode=TwoWay}"
                              cal:Message.Attach="[Event Click] = [Action ShowUserPage]"
                              />
                    <MenuItem Header="{lex:Loc Remove}" 
                              IsEnabled="{Binding MenuOpenStatus, Mode=TwoWay}"                              
                              cal:Message.Attach="[Event Click] = [Action RemoveVisitor]"
                              />
                </ContextMenu>
            </ListBox.ContextMenu>
        </ListBox>
    </Grid>
</UserControl>
