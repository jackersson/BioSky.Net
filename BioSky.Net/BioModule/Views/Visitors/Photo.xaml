<UserControl x:Class="BioModule.Views.Visitors.Photo"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BioModule.Views"
             xmlns:vm="clr-namespace:BioModule.ViewModels"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:cal="http://www.caliburnproject.org"   
             xmlns:utils="clr-namespace:BioModule.Utils"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:resloader="clr-namespace:BioModule.ResourcesLoader"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="400"
             d:DataContext="{d:DesignInstance vm:VisitorsViewModel, IsDesignTimeCreatable=False}"
             >


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <utils:ConvertPhotoPathToImage x:Key="ConvertPhotoPathToImage" />
            <utils:ConvertStatusToImage x:Key="ConvertTextToImage" />
            <utils:ConvertLongToDateTime x:Key="ConvertLongToDateTime"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
            <resloader:ResourceLoader x:Key="ResourceLoader"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
        </Grid.ColumnDefinitions>

        <DataGrid 
            BorderThickness="1" 
                  Grid.Column="0" HorizontalAlignment="Stretch" 
            Grid.ColumnSpan="5"
                  Margin="2,1,0,0" VerticalAlignment="Stretch"            
                  ItemsSource="{Binding Visitors}"                
                  GridLinesVisibility="None"
                  AutoGenerateColumns="False"
                  HeadersVisibility ="None"
                  CanUserSortColumns="True" CanUserAddRows="False"
                  materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                  materialDesign:DataGridAssist.ColumnHeaderPadding="8"              
                  ColumnHeaderStyle="{StaticResource MaterialDesignDataGridColumnHeader}"
                  SelectedItem="{Binding SelectedItem, Mode=TwoWay}"              
                  cal:Message.Attach="[Event MouseRightButtonDown] = [Action OnMouseRightButtonDown($mouseSelectedItem)];
                                      [Event SelectionChanged] = [Action OnSelectionChanged($eventArgs)]">

            <DataGrid.Columns>
                <DataGridTemplateColumn Header="User" IsReadOnly="True" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Status}" Value="Success">
                                                <Setter Property="Background" Value="#FFEAFFEA"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Status}" Value="Failed">
                                                <Setter Property="Background" Value="#7FFFECEC"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                            <Grid Margin="5,5,5,5" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                    <Image Grid.Column="0" Source="{Binding Personid, Converter={x:Static vm:UsersViewModel.PhotoIDConverter}}" 
                                       Stretch="Fill" Width="50" Height="50"/>

                                <StackPanel Margin="5,-4,0,0" Grid.Column="1">
                                    <TextBlock Text="{Binding Personid, Converter={x:Static vm:UsersViewModel.PersonIdToLastnameConverter}}" 
                                               HorizontalAlignment="Left" Foreground="#FF5E82A8" FontWeight="Bold" ></TextBlock>
                                    <TextBlock Text="{Binding Personid, Converter={x:Static vm:UsersViewModel.PersonIdToFirstnameConverter}}" 
                                               HorizontalAlignment="Left" Foreground="#FF5E82A8" FontWeight="Bold" ></TextBlock>
                                        <TextBlock Text="{Binding Time, Converter={StaticResource ConvertLongToDateTime}}" 
                                               HorizontalAlignment="Left" Foreground="Gray" FontSize="11" FontWeight="SemiBold" ></TextBlock>

                                    </StackPanel>
                            </Grid>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

            <DataGrid.ContextMenu >
                <ContextMenu x:Name="VisitorContextMenu" IsEnabled="True" >
                    <MenuItem Header="Open in New Tab"  
                              IsEnabled="{Binding MenuOpenStatus, Mode=TwoWay}"
                              cal:Message.Attach="[Event Click] = [Action ShowUserPage]"
                              />
                    <MenuItem Header="Remove" 
                              IsEnabled="{Binding MenuOpenStatus, Mode=TwoWay}"                              
                              cal:Message.Attach="[Event Click] = [Action RemoveVisitor]"
                              />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>        
    </Grid>
</UserControl>
