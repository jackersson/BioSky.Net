<UserControl x:Class="BioModule.Views.FaceEnrollmentBarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BioModule.Views"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" 
             xmlns:resloader="clr-namespace:BioModule.ResourcesLoader"             
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"  
             lex:LocalizeDictionary.DesignCulture="uk-UA"
             lex:ResxLocalizationProvider.DefaultAssembly="BioModule"
             lex:ResxLocalizationProvider.DefaultDictionary="lang"
             mc:Ignorable="d" 
             Height="64"
             d:DesignHeight="300" d:DesignWidth="230">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Colors.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <x:StaticExtension Member="resloader:ResourceLoader.Instance" x:Key="ResourceLoader"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <Style x:Key="MyStandardButton" TargetType="Button">
                <Setter Property="Background" Value="{StaticResource BackgroundNormal}" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushNormal}" />
                <Setter Property="Foreground" Value="{StaticResource Foreground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                                <Grid>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource BackgroundSelected}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="{DynamicResource BackgroundNormal}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushNormal}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Padding" Value="5,6"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="MinHeight" Value="24"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Border x:Name="Background" Background="{TemplateBinding Background}"  CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" 
                                        CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}"
                                        CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                        IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                                    <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush2}"/>
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource BorderBrushNormal}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush8}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush3}"/>
                                </MultiTrigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush7}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderThickness" TargetName="Border" Value="1"/>
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource BorderBrushNormal}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                                    <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.3"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="GridLayout">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="28"/>
            <ColumnDefinition Width="28"/>
            <ColumnDefinition Width="28"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="32"/>
            <RowDefinition Height="32"/>
        </Grid.RowDefinitions>

        <ComboBox ItemsSource="{Binding DevicesNames}"
                  SelectedItem="{Binding SelectedDevice, Mode=TwoWay}" 
                  Controls:TextBoxHelper.Watermark="{Binding AvaliableDevicesCount}"               
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch" 
                  Grid.Row="1"                    
                  Grid.Column="0" Grid.ColumnSpan="2">
        </ComboBox>

        <Expander        
            Grid.Row="0"  Grid.Column="0" Grid.ColumnSpan="5" Grid.RowSpan="3"
            ExpandDirection="Up" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"
            Background="#FFFFFFFF" BorderBrush="{x:Null}" 
            cal:Message.Attach="[Event Expanded] = [Action OnExpand]"
            >
            <Expander.ContentTemplate>
                <DataTemplate>
                    <StackPanel DataContext="{Binding ElementName=GridLayout, Path=DataContext}">
                        <ComboBox SelectedIndex="{Binding SelectedResolution}"
                                  ItemsSource="{Binding Resolution}" 
                                  Controls:TextBoxHelper.Watermark="Available camera resolution"
                                  Controls:TextBoxHelper.UseFloatingWatermark="True"                                  
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        </ComboBox>
                    </StackPanel>
                </DataTemplate>
            </Expander.ContentTemplate>

            <Expander.Template>
                <ControlTemplate  TargetType="{x:Type Expander}">
                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="28"/>
                            <ColumnDefinition Width="28"/>
                            <ColumnDefinition Width="28"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="32"/>
                        </Grid.RowDefinitions>

                        <ToggleButton  Width="24" MaxHeight="24" ToolTip="Settings" 
                                      Grid.Row="1" Grid.Column="2" Style="{DynamicResource ToggleButtonStyle1}" 
                                      IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"                                           
                                      >
                            <Image Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Center"
                                   Source="{Binding Source={StaticResource ResourceLoader}, Path=SettingsIconSource}" />
                        </ToggleButton>

                        <ContentPresenter x:Name="ExpanderContent"
                                          Visibility="Collapsed"
                                          Grid.Row="2" Grid.ColumnSpan="10" Margin="0,0,0,2"
                                          VerticalAlignment="Bottom" HorizontalAlignment="Left"
                                          >
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderContent" 
                                    Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Expander.Template>
        </Expander>

        <Button Width="24" Height="24" BorderThickness="1" 
                HorizontalAlignment="Center" VerticalAlignment="Center"                 
                Style="{StaticResource MyStandardButton}" 
                Grid.Row="1"  Grid.Column="3" ToolTip="Snapshoot"
                cal:Message.Attach="[Event Click] = [Action OnSnapshoot]">
            <Image Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center"
                   Source="{Binding Source={StaticResource ResourceLoader}, Path=SnapshootIconSource}" />
        </Button>

        <Button Width="24" Height="24" BorderThickness="1" ToolTip="Stop Device"
                HorizontalAlignment="Center" VerticalAlignment="Center"                
                Style="{StaticResource MyStandardButton}" Grid.Row="1" Grid.Column="4"
                cal:Message.Attach="[Event Click] = [Action OnStopDevice]">
            <Image Width="28" Height="28" VerticalAlignment="Center" HorizontalAlignment="Center"
                   Source="{Binding Source={StaticResource ResourceLoader}, Path=StopIconSource}" />
        </Button>

        <Button Width="24" Height="24" BorderThickness="1" Margin="2,0,0,0"
                HorizontalAlignment="Center" VerticalAlignment="Center"                 
                Style="{StaticResource MyStandardButton}"
                Grid.Row="1"  Grid.Column="5" Visibility="{Binding EnrollButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" >
            <Image Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Center"
                   Source="{Binding Source={StaticResource ResourceLoader}, Path=StartIconSource}" />
        </Button>
    </Grid>
</UserControl>
